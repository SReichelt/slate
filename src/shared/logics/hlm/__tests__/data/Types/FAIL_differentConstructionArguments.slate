%../../../../../../../data/logics/hlm%

[
  $~"Cardinal numbers" = $../Essentials/"Cardinal numbers",
  $~Functions = $../Essentials/Functions,
  $~"Natural numbers" = $../Essentials/"Natural numbers",
  $~"Pointed sets" = $../Essentials/"Pointed sets"
]

/**
 * @expectedError Type mismatch: $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Natural numbers") and $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Cardinal numbers") are incompatible
 * @expectedError Type mismatch: $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Natural numbers") and $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Cardinal numbers") are incompatible
 * @expectedError Type mismatch: $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Natural numbers") and $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Cardinal numbers") are incompatible
 * @expectedError Type mismatch: $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Natural numbers") and $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Cardinal numbers") are incompatible
 * @expectedError Type mismatch: element of $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Cardinal numbers") expected
 * @expectedError Type mismatch: element of $../Essentials/Functions(X = $../Essentials/"Natural numbers", Y = $../Essentials/"Pointed sets") expected
 */
$FAIL_differentConstructionArguments(
  s: %Element($~Functions(X = $~"Natural numbers", Y = $~"Natural numbers")),
  t: %Element($~Functions(X = $~"Natural numbers", Y = $~"Cardinal numbers")),
  u: %Element($~Functions(X = $~"Natural numbers", Y = $~"Pointed sets"))
): %Predicate {
  definition = [
    %in(
      s,
      $~Functions(X = $~"Natural numbers", Y = $~"Cardinal numbers")
    ),
    %sub(
      $~Functions(X = $~"Natural numbers", Y = $~"Natural numbers"),
      $~Functions(X = $~"Natural numbers", Y = $~"Cardinal numbers")
    ),
    %setEquals(
      $~Functions(X = $~"Natural numbers", Y = $~"Natural numbers"),
      $~Functions(X = $~"Natural numbers", Y = $~"Cardinal numbers")
    ),
    %equals(s, t),
    %equals(
      %asElementOf(
        s,
        $~Functions(X = $~"Natural numbers", Y = $~"Cardinal numbers")
      ),
      t
    ),
    %equals(
      %asElementOf(
        s,
        $~Functions(X = $~"Natural numbers", Y = $~"Pointed sets")
      ),
      u
    )
  ]
}
