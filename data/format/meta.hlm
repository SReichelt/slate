%meta%

$meta: %MetaModel {
  definitionTypes = [$MetaModel, $DefinitionType, $ExpressionType, $ParameterType, %Any],
  expressionTypes = [$Any, $Type, $Int, $String, $ParameterList, $SingleParameter, $ArgumentList, %Any],
  functions = [$Any, $self, $true, $false],
  lookup = %self
}

$MetaModel: %DefinitionType {
  members = #(
    definitionTypes: %Any[],
    expressionTypes: %Any[] = [],
    functions: %Any[] = [],
    lookup?: %Any
  )
}

$DefinedType: %DefinitionType {
  members = #(
    superType?: $DefinedType,
    members?: %ParameterList,
    exports[members]: %Any[] = []
  )
}

$DefinitionType(resultType?: $Type): %DefinitionType {
  superType = $DefinedType,
  members = #(
    innerDefinitionTypes: $DefinedType[] = []
  )
}

$ExpressionType: %DefinitionType {
  superType = $DefinedType
}

$ParameterType(variableType?: $Type): %DefinitionType {
  superType = $ExpressionType,
  members = #(
    optional: $Bool = $false,
    argumentType?: $ExpressionType
  )
}

$Any: %ExpressionType {}
$self: %Any {}

$Type: %ExpressionType {}

$Bool: %ExpressionType {}
$true: $Bool {}
$false: $Bool {}

$Int: %ExpressionType {}
$String: %ExpressionType {}

$ParameterList: %ExpressionType {}
$SingleParameter(type?: $Type): %ExpressionType {
  superType = $ParameterList
}

$ArgumentList: %ExpressionType {}
