%../../../../logics/hlm%

$"morphism value"(
  U: %Symbol(auto = %true),
  𝓒: %Element(
    $../Categories(U = {U}),
    auto = %true
  ),
  𝓓: %Element(
    %previous,
    auto = %true
  ),
  F: %Element($Functors(
    U = {U},
    𝓒 = {𝓒},
    𝓓 = {𝓓}
  )),
  𝐘: %Element($../Objects(
    U = {U},
    𝓒 = {𝓒}
  )),
  𝐙: %Element(%previous),
  f: %Element($../Morphisms(
    U = {U},
    𝓒 = {𝓒},
    𝐗 = {𝐘},
    𝐘 = {𝐙}
  ))
): %ExplicitOperator {
  display = [$Function(
    function = F,
    arguments = [f]
  )],
  definition = [%structuralCases(
    F,
    $Functors(
      U = {U},
      𝓒 = {𝓒},
      𝓓 = {𝓓}
    ),
    [{
      constructor = $Functors(
          U = {U},
          𝓒 = {𝓒},
          𝓓 = {𝓓}
        ).functor,
      parameters = #(
        𝐀: %Binding(
          $../Objects(
            U = {U},
            𝓒 = {𝓒}
          ),
          #(𝐃: %Element($../Objects(
            U = {U},
            𝓒 = {𝓓}
          )))
        ),
        𝐁: %Binding(
          $../Objects(
            U = {U},
            𝓒 = {𝓒}
          ),
          #(𝐂: %Binding(
            %previous,
            #(f: %Binding(
              $../Morphisms(
                U = {U},
                𝓒 = {𝓒},
                𝐗 = {𝐁},
                𝐘 = {𝐂}
              ),
              #(d: %Element($../Morphisms(
                U = {U},
                𝓒 = {𝓓},
                𝐗 = {𝐃[𝐁]},
                𝐘 = {𝐃[𝐂]}
              )))
            ))
          ))
        ),
        _1: %Constraint(%forall(
          #(𝐀: %Element($../Objects(
            U = {U},
            𝓒 = {𝓒}
          ))),
          %equals(
            d[
              𝐀,
              𝐀,
              $../identity(
                U = {U},
                𝓒 = {𝓒},
                𝐗 = {𝐀}
              )
            ],
            $../identity(
              U = {U},
              𝓒 = {𝓓},
              𝐗 = {𝐃[𝐀]}
            )
          )
        )),
        _2: %Constraint(%forall(
          #(
            𝐀: %Element($../Objects(
              U = {U},
              𝓒 = {𝓒}
            )),
            𝐁: %Element(%previous),
            𝐂: %Element(%previous),
            f: %Element($../Morphisms(
              U = {U},
              𝓒 = {𝓒},
              𝐗 = {𝐀},
              𝐘 = {𝐁}
            )),
            g: %Element($../Morphisms(
              U = {U},
              𝓒 = {𝓒},
              𝐗 = {𝐁},
              𝐘 = {𝐂}
            ))
          ),
          %equals(
            d[
              𝐀,
              𝐂,
              $../composition(
                U = {U},
                𝓒 = {𝓒},
                𝐗 = {𝐀},
                𝐘 = {𝐁},
                𝐙 = {𝐂},
                g = {g},
                f = {f}
              )
            ],
            $../composition(
              U = {U},
              𝓒 = {𝓓},
              𝐗 = {𝐃[𝐀]},
              𝐘 = {𝐃[𝐁]},
              𝐙 = {𝐃[𝐂]},
              g = {d[𝐁,𝐂,g]},
              f = {d[𝐀,𝐁,f]}
            )
          )
        ))
      ),
      value = d[𝐘,𝐙,f]
    }]
  )]
}
