%../../../../../logics/hlm%

/**
 * @remarks This defines the category of small categories, or, more generally, a category in _V_ of all categories in _U_.
 */
$categories(
  U: %Symbol,
  V: %Symbol
): %ExplicitOperator {
  display = [$SubSup(
    body = '𝐂𝐚𝐭',
    sub = $Group(items = [U, V])
  )],
  definition = [$../Categories(U = {V}).category(
      O = {$../Categories(U = {U})},
      𝐀 = {
        #(𝓐: %Element($../Categories(U = {U}))),
        {𝐁 = {
          #(𝓑: %Element($../Categories(U = {U}))),
          {M = {$../Functors(
            U = {U},
            𝓒 = {𝓐},
            𝓓 = {𝓑}
          )}}
        }}
      },
      𝐂 = {
        #(𝓒: %Element($../Categories(U = {U}))),
        {i = {$../"identity functor"(
          U = {U},
          𝓒 = {𝓒}
        )}}
      },
      𝐃 = {
        #(𝓓: %Element($../Categories(U = {U}))),
        {𝐄 = {
          #(𝓔: %Element($../Categories(U = {U}))),
          {𝐅 = {
            #(𝓕: %Element($../Categories(U = {U}))),
            {∘ = {$../../../Essentials/Functions/Operations/operator(
              X = {$../Functors(
                U = {U},
                𝓒 = {𝓔},
                𝓓 = {𝓕}
              )},
              Y = {$../Functors(
                U = {U},
                𝓒 = {𝓓},
                𝓓 = {𝓔}
              )},
              Z = {$../Functors(
                U = {U},
                𝓒 = {𝓓},
                𝓓 = {𝓕}
              )},
              parameters = #(
                G: %Element($../Functors(
                  U = {U},
                  𝓒 = {𝓔},
                  𝓓 = {𝓕}
                )),
                F: %Element($../Functors(
                  U = {U},
                  𝓒 = {𝓓},
                  𝓓 = {𝓔}
                ))
              ),
              operator = $../"functor composition"(
                U = {U},
                𝓒 = {𝓓},
                𝓓 = {𝓔},
                𝓔 = {𝓕},
                F = {F},
                G = {G}
              )
            )}}
          }}
        }}
      }
  )]
}
