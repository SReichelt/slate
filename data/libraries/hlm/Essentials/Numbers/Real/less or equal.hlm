%../../../../../logics/hlm%

$"less or equal"(
  a: %Element(
    $"Real numbers",
    shortcut = {
      $"Real numbers".class,
      #(
        r_a: %Element(
          $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}),
          shortcut = {
            $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}).sequence,
            #(n: %Binding(
              $../Natural/"Natural numbers",
              #(x: %Element($../Rational/"Rational numbers"))
            )),
            override = %true
          }
        ),
        _1: %Constraint($../Rational/Sequences/cauchy(α = {r_a}))
      )
    }
  ),
  b: %Element(
    %previous,
    shortcut = {
      $"Real numbers".class,
      #(
        r_b: %Element(
          $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}),
          shortcut = {
            $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}).sequence,
            #(n: %Binding(
              $../Natural/"Natural numbers",
              #(y: %Element($../Rational/"Rational numbers"))
            )),
            override = %true
          }
        ),
        _2: %Constraint($../Rational/Sequences/cauchy(α = {r_b}))
      )
    }
  )
): %Predicate {
  display = [
    $Relation(
      symbol = %neg('≤', '≰'),
      operands = [a, b]
    ),
    $Relation(
      symbol = %neg('≥', '≱'),
      operands = [b, a]
    )
  ],
  definition = [%forall(
    #(ε: %Element($../Rational/"Positive numbers")),
    %exists(
      #(n: %Element($../Natural/"Natural numbers")),
      formula = %forall(
        #(m: %Element($../Natural/Subsets/"Segment (greater or equal)"(n = {n}))),
        $../Rational/"less or equal"(
          a = {x[m]},
          b = {$../Rational/sum(
            a = {y[m]},
            b = {ε}
          )}
        )
      )
    )
  )]
}
