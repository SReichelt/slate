%../../../../../logics/hlm%

$"less or equal"(
  a: %Element($"Real numbers"),
  b: %Element(%previous)
): %Predicate {
  display = [
    $Relation(
      symbol = %neg('‚â§', '‚â∞'),
      operands = [a, b]
    ),
    $Relation(
      symbol = %neg('‚â•', '‚â±'),
      operands = [b, a]
    )
  ],
  definition = [%structural(
    b,
    $"Real numbers",
    [{
      constructor = $"Real numbers".class,
      parameters = #(
        r_b: %Element(
          $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}),
          shortcut = {
            constructor = $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}).sequence,
            parameters = #(n: %Binding(
              $../Natural/"Natural numbers",
              #(y: %Element($../Rational/"Rational numbers"))
            )),
            override = %true
          }
        ),
        _2: %Constraint($../Rational/Sequences/cauchy(ùêö = {r_b}))
      ),
      value = %structural(
        a,
        $"Real numbers",
        [{
          constructor = $"Real numbers".class,
          parameters = #(
            r_a: %Element(
              $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}),
              shortcut = {
                constructor = $../../Sequences/"Infinite sequences"(S = {$../Rational/"Rational numbers"}).sequence,
                parameters = #(n: %Binding(
                  $../Natural/"Natural numbers",
                  #(x: %Element($../Rational/"Rational numbers"))
                )),
                override = %true
              }
            ),
            _1: %Constraint($../Rational/Sequences/cauchy(ùêö = {r_a}))
          ),
          value = %forall(
            #(Œµ: %Element($../Rational/Subsets/"Positive numbers")),
            %exists(
              #(n: %Element($../Natural/"Natural numbers")),
              formula = %forall(
                #(m: %Element($../Natural/Subsets/"Segment (greater or equal)"(n = {n}))),
                $../Rational/"less or equal"(
                  a = {x[m]},
                  b = {$../Rational/sum(
                    a = {y[m]},
                    b = {Œµ}
                  )}
                )
              )
            )
          )
        }]
      )
    }]
  )]
}
