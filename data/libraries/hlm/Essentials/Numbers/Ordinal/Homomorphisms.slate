%../../../../../logics/hlm%

$Homomorphisms(
  𝐱: %Element($"Ordinal numbers"),
  𝐲: %Element(%previous)
): %SetOperator {
  display = [$Function(
    function = 'Hom',
    arguments = [𝐱, 𝐲]
  )],
  definitionDisplay = {
    parameter = #(φ: %Expr),
    display = [$FunctionDefinition(
      function = φ,
      symbol = '→',
      operands = [𝐱, 𝐲]
    )],
    singularName = 'homomorphism',
    pluralName = 'homomorphisms'
  },
  definition = [%subset(
    #(f: %Element($../../Functions/Functions(
      X = {$Elements(𝐱 = {𝐱})},
      Y = {$Elements(𝐱 = {𝐲})}
    ))),
    %forall(
      #(
        a: %Element($Elements(𝐱 = {𝐱})),
        b: %Element(%previous),
        _1: %Constraint($before(
          𝐱 = {𝐱},
          a = {a},
          b = {b}
        ))
      ),
      $before(
        𝐱 = {𝐲},
        a = {$../../Functions/value(
          X = {$Elements(𝐱 = {𝐱})},
          Y = {$Elements(𝐱 = {𝐲})},
          f = {f},
          x = {a}
        )},
        b = {$../../Functions/value(
          X = {$Elements(𝐱 = {𝐱})},
          Y = {$Elements(𝐱 = {𝐲})},
          f = {f},
          x = {b}
        )}
      )
    )
  )]
}
