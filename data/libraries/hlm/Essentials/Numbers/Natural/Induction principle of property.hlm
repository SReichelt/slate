%../../../../../logics/hlm%

/**
 * @remarks This is just a slight reformulation based on the definition of a [property](../../Properties/Properties).
 *
 * @references * https://en.wikipedia.org/wiki/Mathematical_induction
 *             * http://mathworld.wolfram.com/PrincipleofMathematicalInduction.html
 *             * https://proofwiki.org/wiki/Principle_of_Mathematical_Induction/Predicate
 */
$"Induction principle of property"(
  p: %Element($../../Properties/Properties(S = {$"Natural numbers"})),
  _1: %Constraint($../../Properties/"has property"(
    S = {$"Natural numbers"},
    p = {p},
    s = {$number(value = 0)}
  )),
  _2: %Constraint(%forall(
    #(
      m: %Element($"Natural numbers"),
      _3: %Constraint($../../Properties/"has property"(
        S = {$"Natural numbers"},
        p = {p},
        s = {m}
      ))
    ),
    $../../Properties/"has property"(
      S = {$"Natural numbers"},
      p = {p},
      s = {$sum(
        m = {m},
        n = {$number(value = 1)}
      )}
    )
  ))
): %StandardTheorem {
  claim = %forall(
    #(n: %Element($"Natural numbers")),
    $../../Properties/"has property"(
      S = {$"Natural numbers"},
      p = {p},
      s = {n}
    )
  )
}
