%../../../../../logics/hlm%

/**
 * @remarks We use this definition of the binomial coefficient because it does not need any well-definedness proof. It can then easily be proved to be equal to the standard definition.
 *
 * @references * https://en.wikipedia.org/wiki/Pascal%27s_rule
 */
$"binomial coefficient"(
  n: %Element($"Natural numbers"),
  k: %Element(%previous)
): %ExplicitOperator {
  display = [$BinomialCoefficient(
    top = n,
    bottom = k
  )],
  definition = [%structuralCases(
    k,
    $"Natural numbers",
    [
      {
        constructor = $"Natural numbers".zero,
        value = $number(value = 1),
        rewrite = %true
      },
      {
        constructor = $"Natural numbers".successor,
        parameters = #(x: %Element($"Natural numbers")),
        value = %structuralCases(
          n,
          $"Natural numbers",
          [
            {
              constructor = $"Natural numbers".zero,
              value = $number(value = 0),
              rewrite = %true
            },
            {
              constructor = $"Natural numbers".successor,
              parameters = #(m: %Element($"Natural numbers")),
              value = $sum(
                m = {$"binomial coefficient"(
                  n = {m},
                  k = {x}
                )},
                n = {$"binomial coefficient"(
                  n = {m},
                  k = {$sum(
                    m = {x},
                    n = {$number(value = 1)}
                  )}
                )}
              ),
              rewrite = %true
            }
          ]
        ),
        rewrite = %true
      }
    ]
  )]
}
