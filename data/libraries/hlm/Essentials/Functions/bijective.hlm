%../../../../logics/hlm%

/**
 * @references * https://en.wikipedia.org/wiki/Bijective_function
 *             * http://mathworld.wolfram.com/Bijection.html
 *             * https://proofwiki.org/wiki/Definition:Bijection
 *             * https://proofwiki.org/wiki/Bijection_iff_Left_and_Right_Inverse
 */
$bijective(
  X: %Set(auto = %true),
  Y: %Set(auto = %true),
  f: %Element($Functions(
    X = {X},
    Y = {Y}
  ))
): %Predicate {
  display = [$Property(
    operand = f,
    property = 'bijective'
  )],
  definition = [
    %and(
      $injective(
        X = {X},
        Y = {Y},
        f = {f}
      ),
      $surjective(
        X = {X},
        Y = {Y},
        f = {f}
      )
    ),
    %forall(
      #(y: %Element(Y)),
      %existsUnique(
        #(x: %Element(X)),
        formula = %equals(
          $value(
            X = {X},
            Y = {Y},
            f = {f},
            x = {x}
          ),
          y
        )
      )
    ),
    %exists(
      #(g: %Element($Functions(
        X = {Y},
        Y = {X}
      ))),
      formula = %and(
        %equals(
          $composition(
            X = {X},
            Y = {Y},
            Z = {X},
            f = {f},
            g = {g}
          ),
          $identity(X = {X})
        ),
        %equals(
          $composition(
            X = {Y},
            Y = {X},
            Z = {Y},
            f = {g},
            g = {f}
          ),
          $identity(X = {Y})
        )
      )
    ),
    %existsUnique(
      #(h: %Element($Functions(
        X = {Y},
        Y = {X}
      ))),
      formula = %and(
        %equals(
          $composition(
            X = {X},
            Y = {Y},
            Z = {X},
            f = {f},
            g = {h}
          ),
          $identity(X = {X})
        ),
        %equals(
          $composition(
            X = {Y},
            Y = {X},
            Z = {Y},
            f = {h},
            g = {f}
          ),
          $identity(X = {Y})
        )
      )
    )
  ]
}
