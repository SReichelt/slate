%../../../../logics/hlm%

/**
 * @remarks This is an attempt at a general definition of the closure of a relation with respect to a property, i.e. the smallest relation that contains the original relation and satisfies the property. Note that it only works for properties that are closed under arbitrary intersections, which should probably be included as a requirement.
 *
 * @references * https://en.wikipedia.org/wiki/Closure_(mathematics)#Binary_relation_closures
 */
$closure(
  S: %Set(auto = %true),
  ≺: %Element(
    $Relations(S = {S}),
    shortcut = {
      constructor = $Relations(S = {S}).relation,
      parameters = #(R: %Subset($../Sets/"Cartesian product"(
        S = {S},
        T = {S}
      )))
    }
  ),
  p: %Element($../Properties/Properties(S = {$Relations(S = {S})}))
): %ExplicitOperator {
  display = [$Function(
    function = $SubSup(
      body = 'cl',
      sub = p
    ),
    arguments = [≺]
  )],
  definition = [$Relations(S = {S}).relation(R = {$../Sets/"Generalized intersection using power set"(
      U = {$../Sets/"Cartesian product"(
        S = {S},
        T = {S}
      )},
      S = {%subset(
        #(x: %Element(
          $../Sets/"Power set"(S = {$../Sets/"Cartesian product"(
            S = {S},
            T = {S}
          )}),
          shortcut = {
            constructor = $../Sets/"Power set"(S = {$../Sets/"Cartesian product"(
                S = {S},
                T = {S}
              )}).subset,
            parameters = #(X: %Subset($../Sets/"Cartesian product"(
              S = {S},
              T = {S}
            ))),
            override = %true
          }
        )),
        %and(
          %sub(R, X),
          $../Properties/"has property"(
            S = {$Relations(S = {S})},
            p = {p},
            s = {$Relations(S = {S}).relation(R = {X})}
          )
        )
      )}
  )})]
}
