%../../../../logics/hlm%

/**
 * @remarks This definition constructs a partial order on the Cartesian product of two sets _S_ and _T_ from partial orders on _S_ and _T_, combining the two partial orders lexicographically. It is used to define [multiplication of ordinal numbers](../Numbers/Ordinal/product).
 */
$"lexicographical order"(
  S: %Set(auto = %true),
  T: %Set(auto = %true),
  ⪯: %Element($Endorelations(S = {S})),
  _1: %Constraint($"partial order"(
    S = {S},
    ≺ = {⪯}
  )),
  ⊑: %Element($Endorelations(S = {T})),
  _2: %Constraint($"partial order"(
    S = {T},
    ≺ = {⊑}
  ))
): %ExplicitOperator {
  display = [$Operator(
    symbol = '∠',
    operands = [⪯, ⊑]
  )],
  definition = [$Relations(
      S = {$../Sets/"Cartesian product"(
        S = {S},
        T = {T}
      )},
      T = {$../Sets/"Cartesian product"(
        S = {S},
        T = {T}
      )}
    ).relation(R = {%subset(
      #(x: %Element(
        $../Sets/"Cartesian product"(
          S = {$../Sets/"Cartesian product"(
            S = {S},
            T = {T}
          )},
          T = {$../Sets/"Cartesian product"(
            S = {S},
            T = {T}
          )}
        ),
        shortcut = {
          constructor = $../Sets/"Cartesian product"(
              S = {$../Sets/"Cartesian product"(
                S = {S},
                T = {T}
              )},
              T = {$../Sets/"Cartesian product"(
                S = {S},
                T = {T}
              )}
            ).pair,
          parameters = #(
            y: %Element(
              $../Sets/"Cartesian product"(
                S = {S},
                T = {T}
              ),
              shortcut = {
                constructor = $../Sets/"Cartesian product"(
                    S = {S},
                    T = {T}
                  ).pair,
                parameters = #(
                  s: %Element(S),
                  t: %Element(T)
                ),
                override = %true
              }
            ),
            z: %Element(
              $../Sets/"Cartesian product"(
                S = {S},
                T = {T}
              ),
              shortcut = {
                constructor = $../Sets/"Cartesian product"(
                    S = {S},
                    T = {T}
                  ).pair,
                parameters = #(
                  "s'": %Element(S),
                  "t'": %Element(T)
                ),
                override = %true
              }
            )
          ),
          override = %true
        }
      )),
      %and(
        $related(
          S = {S},
          T = {S},
          ≺ = {⪯},
          s = {s},
          t = {"s'"}
        ),
        %or(
          %not(%equals(s, "s'")),
          $related(
            S = {T},
            T = {T},
            ≺ = {⊑},
            s = {t},
            t = {"t'"}
          )
        )
      )
  )})]
}
